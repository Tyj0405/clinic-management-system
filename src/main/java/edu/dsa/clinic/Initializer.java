package edu.dsa.clinic;

import edu.dsa.clinic.dto.ConsultationQueue;
import edu.dsa.clinic.dto.Range;
import edu.dsa.clinic.dto.Schedule;
import edu.dsa.clinic.dto.Shift;
import edu.dsa.clinic.dto.ShiftType;
import edu.dsa.clinic.entity.Appointment;
import edu.dsa.clinic.entity.Consultation;
import edu.dsa.clinic.entity.ConsultationType;
import edu.dsa.clinic.entity.Diagnosis;
import edu.dsa.clinic.entity.Doctor;
import edu.dsa.clinic.entity.Gender;
import edu.dsa.clinic.entity.Medicine;
import edu.dsa.clinic.entity.MedicineAdministrationType;
import edu.dsa.clinic.entity.MedicineType;
import edu.dsa.clinic.entity.Patient;
import edu.dsa.clinic.entity.Prescription;
import edu.dsa.clinic.entity.Product;
import edu.dsa.clinic.entity.Specialization;
import edu.dsa.clinic.entity.Stock;
import edu.dsa.clinic.entity.Treatment;
import edu.dsa.clinic.filter.ProductFilter;

import java.math.BigDecimal;
import java.time.DayOfWeek;
import java.time.LocalDateTime;
import java.time.LocalTime;

public class Initializer {
    private Initializer() {
    }

    public static void initialize() {
        initializePatients();
        initializeDoctors();
        initializeMedicines();
        initializeProducts();
        initializeStocks();
        initializeAppointments();
        initializeConsultations();

        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(1), ConsultationType.GENERAL));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(2), ConsultationType.SPECIALIST));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(3), ConsultationType.EMERGENCY));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(4), ConsultationType.FOLLOW_UP));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(5), ConsultationType.GENERAL));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(6), ConsultationType.GENERAL));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(7), ConsultationType.SPECIALIST));
        Database.queueList.add(new ConsultationQueue(Database.patientsList.get(8), ConsultationType.FOLLOW_UP));
    }

    private static void initializePatients() {
        Database.patientsList.add(((Patient) new Patient().setId(1)).setName("Ahmad Faiz").setGender(Gender.MALE).setIdentification("900101-14-1234").setContactNumber("+60123450001"));
        Database.patientsList.add(((Patient) new Patient().setId(2)).setName("Nurul Aisyah").setGender(Gender.FEMALE).setIdentification("880305-08-5678").setContactNumber("+60123450002"));
        Database.patientsList.add(((Patient) new Patient().setId(3)).setName("Muhammad Hafiz").setGender(Gender.MALE).setIdentification("950712-10-4321").setContactNumber("+60123450003"));
        Database.patientsList.add(((Patient) new Patient().setId(4)).setName("Siti Mariam").setGender(Gender.FEMALE).setIdentification("920918-12-8765").setContactNumber("+60123450004"));
        Database.patientsList.add(((Patient) new Patient().setId(5)).setName("Ahmad Zulkifli").setGender(Gender.MALE).setIdentification("970424-05-1122").setContactNumber("+60123450005"));
        Database.patientsList.add(((Patient) new Patient().setId(6)).setName("Farah Hani").setGender(Gender.FEMALE).setIdentification("890623-09-3344").setContactNumber("+60123450006"));
        Database.patientsList.add(((Patient) new Patient().setId(7)).setName("Daniel Lim").setGender(Gender.MALE).setIdentification("930802-11-5566").setContactNumber("+60123450007"));
        Database.patientsList.add(((Patient) new Patient().setId(8)).setName("Chong Wei").setGender(Gender.MALE).setIdentification("910707-03-7788").setContactNumber("+60123450008"));
        Database.patientsList.add(((Patient) new Patient().setId(9)).setName("Aina Sofea").setGender(Gender.FEMALE).setIdentification("960115-06-9900").setContactNumber("+60123450009"));
        Database.patientsList.add(((Patient) new Patient().setId(10)).setName("Hafizah Rahman").setGender(Gender.FEMALE).setIdentification("940321-01-2233").setContactNumber("+60123450010"));
        Database.patientsList.add(((Patient) new Patient().setId(11)).setName("Syafiq Amir").setGender(Gender.MALE).setIdentification("901231-07-3344").setContactNumber("+60123450011"));
        Database.patientsList.add(((Patient) new Patient().setId(12)).setName("Noraini Hassan").setGender(Gender.FEMALE).setIdentification("881215-02-4455").setContactNumber("+60123450012"));
        Database.patientsList.add(((Patient) new Patient().setId(13)).setName("Irfan Azman").setGender(Gender.MALE).setIdentification("950606-09-5566").setContactNumber("+60123450013"));
        Database.patientsList.add(((Patient) new Patient().setId(14)).setName("Fatin Nadira").setGender(Gender.FEMALE).setIdentification("921101-05-6677").setContactNumber("+60123450014"));
        Database.patientsList.add(((Patient) new Patient().setId(15)).setName("Adib Syahmi").setGender(Gender.MALE).setIdentification("970530-03-7788").setContactNumber("+60123450015"));
        Database.patientsList.add(((Patient) new Patient().setId(16)).setName("Sabrina Khairun").setGender(Gender.FEMALE).setIdentification("890809-11-8899").setContactNumber("+60123450016"));
        Database.patientsList.add(((Patient) new Patient().setId(17)).setName("Wei Ling").setGender(Gender.FEMALE).setIdentification("930202-06-9900").setContactNumber("+60123450017"));
        Database.patientsList.add(((Patient) new Patient().setId(18)).setName("Jonathan Tan").setGender(Gender.MALE).setIdentification("910415-04-1122").setContactNumber("+60123450018"));
        Database.patientsList.add(((Patient) new Patient().setId(19)).setName("Nur Farah").setGender(Gender.FEMALE).setIdentification("960730-08-2233").setContactNumber("+60123450019"));
        Database.patientsList.add(((Patient) new Patient().setId(20)).setName("Ahmad Irfan").setGender(Gender.MALE).setIdentification("940909-12-3344").setContactNumber("+60123450020"));
        Database.patientsList.add(((Patient) new Patient().setId(21)).setName("Siti Zulaikha").setGender(Gender.FEMALE).setIdentification("900424-05-4455").setContactNumber("+60123450021"));
        Database.patientsList.add(((Patient) new Patient().setId(22)).setName("Daniel Ong").setGender(Gender.MALE).setIdentification("880610-09-5566").setContactNumber("+60123450022"));
        Database.patientsList.add(((Patient) new Patient().setId(23)).setName("Aina Najwa").setGender(Gender.FEMALE).setIdentification("950101-11-6677").setContactNumber("+60123450023"));
        Database.patientsList.add(((Patient) new Patient().setId(24)).setName("Hafiz Adnan").setGender(Gender.MALE).setIdentification("921212-03-7788").setContactNumber("+60123450024"));
        Database.patientsList.add(((Patient) new Patient().setId(25)).setName("Farah Iman").setGender(Gender.FEMALE).setIdentification("970303-07-8899").setContactNumber("+60123450025"));
        Database.patientsList.add(((Patient) new Patient().setId(26)).setName("Lim Wei Jie").setGender(Gender.MALE).setIdentification("890808-02-9900").setContactNumber("+60123450026"));
        Database.patientsList.add(((Patient) new Patient().setId(27)).setName("Chong Mei Ling").setGender(Gender.FEMALE).setIdentification("930515-06-1122").setContactNumber("+60123450027"));
        Database.patientsList.add(((Patient) new Patient().setId(28)).setName("Ahmad Danish").setGender(Gender.MALE).setIdentification("910707-10-2233").setContactNumber("+60123450028"));
        Database.patientsList.add(((Patient) new Patient().setId(29)).setName("Siti Hajar").setGender(Gender.FEMALE).setIdentification("960909-04-3344").setContactNumber("+60123450029"));
        Database.patientsList.add(((Patient) new Patient().setId(30)).setName("Muhammad Rizal").setGender(Gender.MALE).setIdentification("940101-08-4455").setContactNumber("+60123450030"));
        Database.patientsList.add(((Patient) new Patient().setId(31)).setName("Nurul Izzah").setGender(Gender.FEMALE).setIdentification("900515-12-5566").setContactNumber("+60123450031"));
        Database.patientsList.add(((Patient) new Patient().setId(32)).setName("Adib Hakim").setGender(Gender.MALE).setIdentification("880303-03-6677").setContactNumber("+60123450032"));
        Database.patientsList.add(((Patient) new Patient().setId(33)).setName("Sabrina Syafiqah").setGender(Gender.FEMALE).setIdentification("950909-07-7788").setContactNumber("+60123450033"));
        Database.patientsList.add(((Patient) new Patient().setId(34)).setName("Wei Han").setGender(Gender.MALE).setIdentification("921212-01-8899").setContactNumber("+60123450034"));
        Database.patientsList.add(((Patient) new Patient().setId(35)).setName("Jonathan Lee").setGender(Gender.MALE).setIdentification("970101-05-9900").setContactNumber("+60123450035"));
        Database.patientsList.add(((Patient) new Patient().setId(36)).setName("Nurul Huda").setGender(Gender.FEMALE).setIdentification("890909-09-1122").setContactNumber("+60123450036"));
        Database.patientsList.add(((Patient) new Patient().setId(37)).setName("Ahmad Nabil").setGender(Gender.MALE).setIdentification("930303-04-2233").setContactNumber("+60123450037"));
        Database.patientsList.add(((Patient) new Patient().setId(38)).setName("Siti Sarah").setGender(Gender.FEMALE).setIdentification("910808-11-3344").setContactNumber("+60123450038"));
        Database.patientsList.add(((Patient) new Patient().setId(39)).setName("Hafiz Firdaus").setGender(Gender.MALE).setIdentification("960101-06-4455").setContactNumber("+60123450039"));
        Database.patientsList.add(((Patient) new Patient().setId(40)).setName("Farah Aina").setGender(Gender.FEMALE).setIdentification("940404-08-5566").setContactNumber("+60123450040"));
        Database.patientsList.add(((Patient) new Patient().setId(41)).setName("Ahmad Saif").setGender(Gender.MALE).setIdentification("900305-01-1122").setContactNumber("+60123450041"));
        Database.patientsList.add(((Patient) new Patient().setId(42)).setName("Siti Aishah").setGender(Gender.FEMALE).setIdentification("880712-02-2233").setContactNumber("+60123450042"));
        Database.patientsList.add(((Patient) new Patient().setId(43)).setName("Muhammad Danish").setGender(Gender.MALE).setIdentification("950901-03-3344").setContactNumber("+60123450043"));
        Database.patientsList.add(((Patient) new Patient().setId(44)).setName("Nur Farzana").setGender(Gender.FEMALE).setIdentification("921001-04-4455").setContactNumber("+60123450044"));
        Database.patientsList.add(((Patient) new Patient().setId(45)).setName("Adib Zulkarnain").setGender(Gender.MALE).setIdentification("970212-05-5566").setContactNumber("+60123450045"));
        Database.patientsList.add(((Patient) new Patient().setId(46)).setName("Fatin Amani").setGender(Gender.FEMALE).setIdentification("890109-06-6677").setContactNumber("+60123450046"));
        Database.patientsList.add(((Patient) new Patient().setId(47)).setName("Lim Shi Wen").setGender(Gender.MALE).setIdentification("930601-07-7788").setContactNumber("+60123450047"));
        Database.patientsList.add(((Patient) new Patient().setId(48)).setName("Chong Mei Fang").setGender(Gender.FEMALE).setIdentification("910803-08-8899").setContactNumber("+60123450048"));
        Database.patientsList.add(((Patient) new Patient().setId(49)).setName("Ahmad Hakim").setGender(Gender.MALE).setIdentification("960506-09-9900").setContactNumber("+60123450049"));
        Database.patientsList.add(((Patient) new Patient().setId(50)).setName("Siti Nurul").setGender(Gender.FEMALE).setIdentification("940202-10-1122").setContactNumber("+60123450050"));
        Database.patientsList.add(((Patient) new Patient().setId(51)).setName("Muhammad Haziq").setGender(Gender.MALE).setIdentification("900707-11-2233").setContactNumber("+60123450051"));
        Database.patientsList.add(((Patient) new Patient().setId(52)).setName("Nurul Hidayah").setGender(Gender.FEMALE).setIdentification("880808-12-3344").setContactNumber("+60123450052"));
        Database.patientsList.add(((Patient) new Patient().setId(53)).setName("Ahmad Firdaus").setGender(Gender.MALE).setIdentification("950505-01-4455").setContactNumber("+60123450053"));
        Database.patientsList.add(((Patient) new Patient().setId(54)).setName("Siti Khadijah").setGender(Gender.FEMALE).setIdentification("921212-02-5566").setContactNumber("+60123450054"));
        Database.patientsList.add(((Patient) new Patient().setId(55)).setName("Adib Farhan").setGender(Gender.MALE).setIdentification("970303-03-6677").setContactNumber("+60123450055"));
        Database.patientsList.add(((Patient) new Patient().setId(56)).setName("Fatin Najwa").setGender(Gender.FEMALE).setIdentification("890909-04-7788").setContactNumber("+60123450056"));
        Database.patientsList.add(((Patient) new Patient().setId(57)).setName("Wei Jie").setGender(Gender.MALE).setIdentification("930101-05-8899").setContactNumber("+60123450057"));
        Database.patientsList.add(((Patient) new Patient().setId(58)).setName("Jonathan Chia").setGender(Gender.MALE).setIdentification("910202-06-9900").setContactNumber("+60123450058"));
        Database.patientsList.add(((Patient) new Patient().setId(59)).setName("Nurul Syahirah").setGender(Gender.FEMALE).setIdentification("960606-07-1122").setContactNumber("+60123450059"));
        Database.patientsList.add(((Patient) new Patient().setId(60)).setName("Ahmad Faizal").setGender(Gender.MALE).setIdentification("940707-08-2233").setContactNumber("+60123450060"));
        Database.patientsList.add(((Patient) new Patient().setId(61)).setName("Siti Hawa").setGender(Gender.FEMALE).setIdentification("900808-09-3344").setContactNumber("+60123450061"));
        Database.patientsList.add(((Patient) new Patient().setId(62)).setName("Muhammad Aiman").setGender(Gender.MALE).setIdentification("880909-10-4455").setContactNumber("+60123450062"));
        Database.patientsList.add(((Patient) new Patient().setId(63)).setName("Nurul Iman").setGender(Gender.FEMALE).setIdentification("950101-11-5566").setContactNumber("+60123450063"));
        Database.patientsList.add(((Patient) new Patient().setId(64)).setName("Adib Syafiq").setGender(Gender.MALE).setIdentification("921212-12-6677").setContactNumber("+60123450064"));
        Database.patientsList.add(((Patient) new Patient().setId(65)).setName("Fatin Husna").setGender(Gender.FEMALE).setIdentification("970303-01-7788").setContactNumber("+60123450065"));
        Database.patientsList.add(((Patient) new Patient().setId(66)).setName("Lim Wei Han").setGender(Gender.MALE).setIdentification("890909-02-8899").setContactNumber("+60123450066"));
        Database.patientsList.add(((Patient) new Patient().setId(67)).setName("Chong Mei Hui").setGender(Gender.FEMALE).setIdentification("930101-03-9900").setContactNumber("+60123450067"));
        Database.patientsList.add(((Patient) new Patient().setId(68)).setName("Ahmad Hafiz").setGender(Gender.MALE).setIdentification("910202-04-1122").setContactNumber("+60123450068"));
        Database.patientsList.add(((Patient) new Patient().setId(69)).setName("Siti Aina").setGender(Gender.FEMALE).setIdentification("960606-05-2233").setContactNumber("+60123450069"));
        Database.patientsList.add(((Patient) new Patient().setId(70)).setName("Muhammad Farid").setGender(Gender.MALE).setIdentification("940707-06-3344").setContactNumber("+60123450070"));
        Database.patientsList.add(((Patient) new Patient().setId(71)).setName("Nurul Shafiqah").setGender(Gender.FEMALE).setIdentification("900808-07-4455").setContactNumber("+60123450071"));
        Database.patientsList.add(((Patient) new Patient().setId(72)).setName("Ahmad Zain").setGender(Gender.MALE).setIdentification("880909-08-5566").setContactNumber("+60123450072"));
        Database.patientsList.add(((Patient) new Patient().setId(73)).setName("Siti Mariam").setGender(Gender.FEMALE).setIdentification("950101-09-6677").setContactNumber("+60123450073"));
        Database.patientsList.add(((Patient) new Patient().setId(74)).setName("Adib Hakim").setGender(Gender.MALE).setIdentification("921212-10-7788").setContactNumber("+60123450074"));
        Database.patientsList.add(((Patient) new Patient().setId(75)).setName("Fatin Aisyah").setGender(Gender.FEMALE).setIdentification("970303-11-8899").setContactNumber("+60123450075"));
        Database.patientsList.add(((Patient) new Patient().setId(76)).setName("Lim Shi Han").setGender(Gender.MALE).setIdentification("890909-12-9900").setContactNumber("+60123450076"));
        Database.patientsList.add(((Patient) new Patient().setId(77)).setName("Chong Mei Yan").setGender(Gender.FEMALE).setIdentification("930101-01-1122").setContactNumber("+60123450077"));
        Database.patientsList.add(((Patient) new Patient().setId(78)).setName("Ahmad Haziq").setGender(Gender.MALE).setIdentification("910202-02-2233").setContactNumber("+60123450078"));
        Database.patientsList.add(((Patient) new Patient().setId(79)).setName("Siti Hajar").setGender(Gender.FEMALE).setIdentification("960606-03-3344").setContactNumber("+60123450079"));
        Database.patientsList.add(((Patient) new Patient().setId(80)).setName("Muhammad Danish").setGender(Gender.MALE).setIdentification("940707-04-4455").setContactNumber("+60123450080"));
        Database.patientsList.add(((Patient) new Patient().setId(81)).setName("Nurul Izzah").setGender(Gender.FEMALE).setIdentification("900808-05-5566").setContactNumber("+60123450081"));
        Database.patientsList.add(((Patient) new Patient().setId(82)).setName("Ahmad Faizal").setGender(Gender.MALE).setIdentification("880909-06-6677").setContactNumber("+60123450082"));
        Database.patientsList.add(((Patient) new Patient().setId(83)).setName("Siti Nadira").setGender(Gender.FEMALE).setIdentification("950101-07-7788").setContactNumber("+60123450083"));
        Database.patientsList.add(((Patient) new Patient().setId(84)).setName("Adib Syahmi").setGender(Gender.MALE).setIdentification("921212-08-8899").setContactNumber("+60123450084"));
        Database.patientsList.add(((Patient) new Patient().setId(85)).setName("Fatin Husna").setGender(Gender.FEMALE).setIdentification("970303-09-9900").setContactNumber("+60123450085"));
        Database.patientsList.add(((Patient) new Patient().setId(86)).setName("Lim Wei Han").setGender(Gender.MALE).setIdentification("890909-10-1122").setContactNumber("+60123450086"));
        Database.patientsList.add(((Patient) new Patient().setId(87)).setName("Chong Mei Hui").setGender(Gender.FEMALE).setIdentification("930101-11-2233").setContactNumber("+60123450087"));
        Database.patientsList.add(((Patient) new Patient().setId(88)).setName("Ahmad Hafiz").setGender(Gender.MALE).setIdentification("910202-12-3344").setContactNumber("+60123450088"));
        Database.patientsList.add(((Patient) new Patient().setId(89)).setName("Siti Aina").setGender(Gender.FEMALE).setIdentification("960606-01-4455").setContactNumber("+60123450089"));
        Database.patientsList.add(((Patient) new Patient().setId(90)).setName("Muhammad Farid").setGender(Gender.MALE).setIdentification("940707-02-5566").setContactNumber("+60123450090"));
        Database.patientsList.add(((Patient) new Patient().setId(91)).setName("Nurul Shafiqah").setGender(Gender.FEMALE).setIdentification("900808-03-6677").setContactNumber("+60123450091"));
        Database.patientsList.add(((Patient) new Patient().setId(92)).setName("Ahmad Zain").setGender(Gender.MALE).setIdentification("880909-04-7788").setContactNumber("+60123450092"));
        Database.patientsList.add(((Patient) new Patient().setId(93)).setName("Siti Mariam").setGender(Gender.FEMALE).setIdentification("950101-05-8899").setContactNumber("+60123450093"));
        Database.patientsList.add(((Patient) new Patient().setId(94)).setName("Adib Hakim").setGender(Gender.MALE).setIdentification("921212-06-9900").setContactNumber("+60123450094"));
        Database.patientsList.add(((Patient) new Patient().setId(95)).setName("Fatin Aisyah").setGender(Gender.FEMALE).setIdentification("970303-07-1122").setContactNumber("+60123450095"));
        Database.patientsList.add(((Patient) new Patient().setId(96)).setName("Lim Shi Han").setGender(Gender.MALE).setIdentification("890909-08-2233").setContactNumber("+60123450096"));
        Database.patientsList.add(((Patient) new Patient().setId(97)).setName("Chong Mei Yan").setGender(Gender.FEMALE).setIdentification("930101-09-3344").setContactNumber("+60123450097"));
        Database.patientsList.add(((Patient) new Patient().setId(98)).setName("Ahmad Haziq").setGender(Gender.MALE).setIdentification("910202-10-4455").setContactNumber("+60123450098"));
        Database.patientsList.add(((Patient) new Patient().setId(99)).setName("Siti Hajar").setGender(Gender.FEMALE).setIdentification("960606-11-5566").setContactNumber("+60123450099"));
        Database.patientsList.add(((Patient) new Patient().setId(100)).setName("Muhammad Danish").setGender(Gender.MALE).setIdentification("940707-12-6677").setContactNumber("+60123450100"));
    }

    private static void initializeDoctors() {
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(1))
                        .setName("Bincent")
                        .setGender(Gender.MALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Neurosurgery)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(8, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(2))
                        .setName("Daren")
                        .setGender(Gender.MALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Ophthalmology)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(9, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(3))
                        .setName("KaiBing")
                        .setGender(Gender.FEMALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Orthopedics)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(22, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(4))
                        .setName("YiJia")
                        .setGender(Gender.FEMALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Pediatrics)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(21, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(
                ((Doctor) new Doctor()
                        .setId(5))
                        .setName("WenHan")
                        .setGender(Gender.MALE)
                        .setContactNumber("+123456789")
                        .setSpecialization(Specialization.Otorhinolaryngology)
                        .setSchedule(new Schedule()
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(13, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.MONDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                                .setType(ShiftType.WORK))
                                .addShift(DayOfWeek.THURSDAY,
                                        new Shift()
                                                .setTimeRange(new Range<>(LocalTime.of(10, 0), LocalTime.of(16, 0)))
                                                .setType(ShiftType.WORK)))
        );
        Database.doctorList.add(((Doctor) new Doctor()
                .setId(6))
                .setName("Alex")
                .setGender(Gender.MALE)
                .setContactNumber("+100000006")
                .setSpecialization(Specialization.Neurosurgery)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.TUESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.TUESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.FRIDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(7))
                .setName("Jordan")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000007")
                .setSpecialization(Specialization.Pediatrics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.MONDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(8))
                .setName("Taylor")
                .setGender(Gender.MALE)
                .setContactNumber("+100000008")
                .setSpecialization(Specialization.Ophthalmology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(9))
                .setName("Morgan")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000009")
                .setSpecialization(Specialization.Otorhinolaryngology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SATURDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(10))
                .setName("Casey")
                .setGender(Gender.MALE)
                .setContactNumber("+100000010")
                .setSpecialization(Specialization.Orthopedics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(11))
                .setName("Riley")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000011")
                .setSpecialization(Specialization.Neurosurgery)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.MONDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(12))
                .setName("Jamie")
                .setGender(Gender.MALE)
                .setContactNumber("+100000012")
                .setSpecialization(Specialization.Pediatrics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.FRIDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(13))
                .setName("Cameron")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000013")
                .setSpecialization(Specialization.Ophthalmology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.SATURDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(14))
                .setName("Drew")
                .setGender(Gender.MALE)
                .setContactNumber("+100000014")
                .setSpecialization(Specialization.Otorhinolaryngology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.TUESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(15))
                .setName("Quinn")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000015")
                .setSpecialization(Specialization.Orthopedics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.FRIDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(16))
                .setName("Avery")
                .setGender(Gender.MALE)
                .setContactNumber("+100000016")
                .setSpecialization(Specialization.Neurosurgery)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.WEDNESDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(17))
                .setName("Parker")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000017")
                .setSpecialization(Specialization.Pediatrics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.MONDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(18))
                .setName("Reese")
                .setGender(Gender.MALE)
                .setContactNumber("+100000018")
                .setSpecialization(Specialization.Ophthalmology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SATURDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(19))
                .setName("Sawyer")
                .setGender(Gender.FEMALE)
                .setContactNumber("+100000019")
                .setSpecialization(Specialization.Otorhinolaryngology)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(7, 0), LocalTime.of(13, 0)))
                                .setType(ShiftType.WORK))
                        .addShift(DayOfWeek.SUNDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

        Database.doctorList.add(((Doctor) new Doctor()
                .setId(20))
                .setName("Blake")
                .setGender(Gender.MALE)
                .setContactNumber("+100000020")
                .setSpecialization(Specialization.Orthopedics)
                .setSchedule(new Schedule()
                        .addShift(DayOfWeek.THURSDAY, new Shift()
                                .setTimeRange(new Range<>(LocalTime.of(14, 0), LocalTime.of(20, 0)))
                                .setType(ShiftType.WORK))
                )
        );

    }

    private static void initializeMedicines() {
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(1))
                        .setName("Acetylsalicylic acid")
                        .addType(MedicineType.ANALGESICS)
                        .addType(MedicineType.ANTIPYRETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(2))
                        .setName("Paracetamol")
                        .addType(MedicineType.ANALGESICS)
                        .addType(MedicineType.ANTIPYRETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(3))
                        .setName("Ibuprofen")
                        .addType(MedicineType.ANALGESICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(4))
                        .setName("Penicillin")
                        .addType(MedicineType.ANTIBIOTICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(5))
                        .setName("Diphenhydramine")
                        .addType(MedicineType.ANTIHISTAMINES)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(6))
                        .setName("Centrizine")
                        .addType(MedicineType.ANTIHISTAMINES)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(7))
                        .setName("Loratadine")
                        .addType(MedicineType.ANTIHISTAMINES)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(8))
                        .setName("Warfarin")
                        .addType(MedicineType.ANTICOAGULANTS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(9))
                        .setName("Heparin")
                        .addType(MedicineType.ANTICOAGULANTS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(10))
                        .setName("Clozapine")
                        .addType(MedicineType.ANTIPSYCHOTICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(11))
                        .setName("Dexamethasone")
                        .addType(MedicineType.CORTICOSTEROIDS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(12))
                        .setName("Rosuvastatin")
                        .addType(MedicineType.STATINS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(13))
                        .setName("Calcium Carbonate")
                        .addType(MedicineType.ANTACIDS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(13))
                        .setName("Magnesium Hydroxide")
                        .addType(MedicineType.ANTACIDS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(14))
                        .setName("Ondansetron")
                        .addType(MedicineType.ANTIEMETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(15))
                        .setName("Metaclopramide")
                        .addType(MedicineType.ANTIEMETICS)
        );
        Database.medicineList.add(
                ((Medicine) new Medicine()
                        .setId(16))
                        .setName("Insulin")
                        .addType(MedicineType.ANTIDIABETICS)
        );
    }

    private static void initializeProducts() {
        // https://ndclist.com/ndc/0536-1054/package/0536-1054-29/price
        Database.productList.add(
                ((Product) new Product()
                        .setId(1))
                        .setName("Aspirin")
                        .setBrand("Recadin")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 1))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0.01529"))
                        .setPrice(new BigDecimal("1"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(2))
                        .setName("Aspirin")
                        .setBrand("Viquprin")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 1))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0.01529"))
                        .setPrice(new BigDecimal("1"))
        );
        Database.productList.add(  // https://ndclist.com/ndc/0135-7021
                ((Product) new Product()
                        .setId(3))
                        .setName("Panadol PM")
                        .setBrand("Panadol")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 2))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(  // https://ndclist.com/ndc/0135-0620
                ((Product) new Product()
                        .setId(4))
                        .setName("Panadol Extra")
                        .setBrand("Panadol")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 2))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(  // https://ndclist.com/ndc/0135-0609
                ((Product) new Product()
                        .setId(5))
                        .setName("Panadol Extra Strength")
                        .setBrand("Panadol")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 2))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(6))
                        .setName("Paracetamol")
                        .setBrand("Tylenol")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 2))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(7))
                        .setName("Ibuprofen")
                        .setBrand("Advil")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 3))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
        Database.productList.add(
                ((Product) new Product()
                        .setId(8))
                        .setName("Centrizine")
                        .setBrand("")
                        .setMedicine(Database.medicineList.findFirst(m -> m.getId() == 6))
                        .setAdministrationType(MedicineAdministrationType.ORAL)
                        .setCost(new BigDecimal("0"))
                        .setPrice(new BigDecimal("0"))
        );
    }

    private static void initializeStocks() {
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(32)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(1)))
                        .setStockInQuantity(32)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(60)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(2)))
                        .setStockInQuantity(40)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(3)))
                        .setStockInQuantity(62)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(62)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(4)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(100)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(5)))
                        .setStockInQuantity(62)
                        .setStockInDate(LocalDateTime.of(2025, 8, 23, 12, 34))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(6)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(7)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
        Database.stockList.add(
                new Stock()
                        .setProduct(Database.productList.findFirst(ProductFilter.byId(8)))
                        .setStockInQuantity(30)
                        .setStockInDate(LocalDateTime.of(2025, 8, 15, 10, 13))
        );
    }

    private static void initializeAppointments() {
        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(1))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 53))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 28, 10, 15))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 4, 8, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 4, 8, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(2))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 7))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 29, 14, 45))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 5, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 5, 7, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(3))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 92))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 30, 9, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 6, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 6, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(4))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 18))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setCreatedAt(LocalDateTime.of(2025, 7, 31, 11, 20))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 7, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 7, 7, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(5))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 45))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 1, 16, 5))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 8, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 8, 7, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(6))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 60))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 2, 8, 50))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 9, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 9, 7, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(7))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 3))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 3, 11, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 10, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 10, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(8))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 77))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 4, 13, 10))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 11, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 11, 7, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(9))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 22))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 5, 9, 40))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 12, 9, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 12, 9, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(10))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 88))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 6, 15, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 13, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 13, 14, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(11))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 11))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 17))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 7, 10, 5))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 14, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 14, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(12))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 65))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 8, 12, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 15, 10, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 15, 10, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(13))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 30))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 9, 17, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 16, 10, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 16, 10, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(14))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 99))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 12))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 10, 8, 10))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 17, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 17, 7, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(15))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 42))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 15))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 11, 11, 55))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 18, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 18, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(16))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 71))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 18))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 12, 14, 20))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 19, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 19, 14, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(17))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 6))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 13, 9, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 20, 10, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 20, 10, 30))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(18))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 80))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 7))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 14, 16, 10))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 21, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 21, 14, 30))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(19))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 25))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 19))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 15, 10, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 22, 7, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 22, 7, 30))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(20))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 50))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 20))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 16, 13, 40))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 23, 14, 0))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 23, 14, 30))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(21))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 85))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 17, 8, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 24, 8, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 24, 9, 0))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(22))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 10))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 11))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 18, 15, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 25, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 25, 8, 0))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(23))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 70))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 16))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 19, 11, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 26, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 26, 8, 0))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(24))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 33))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 8))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 20, 14, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 27, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 27, 8, 0))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(25))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 95))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 10))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 21, 9, 15))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 28, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 28, 8, 0))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(26))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 48))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 6))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 22, 16, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 29, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 29, 8, 0))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(27))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 13))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 13))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 23, 10, 40))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 30, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 30, 8, 0))
                        .setAppointmentType(ConsultationType.EMERGENCY)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(28))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 75))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 9))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 24, 12, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 8, 31, 7, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 8, 31, 8, 0))
                        .setAppointmentType(ConsultationType.FOLLOW_UP)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(29))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 28))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 25, 9, 0))
                        .setExpectedStartAt(LocalDateTime.of(2025, 9, 1, 9, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 9, 1, 10, 0))
                        .setAppointmentType(ConsultationType.GENERAL)
        );

        Database.appointmentList.add(
                ((Appointment) new Appointment()
                        .setId(30))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 82))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 14))
                        .setCreatedAt(LocalDateTime.of(2025, 8, 26, 15, 30))
                        .setExpectedStartAt(LocalDateTime.of(2025, 9, 2, 14, 30))
                        .setExpectedEndAt(LocalDateTime.of(2025, 9, 2, 15, 0))
                        .setAppointmentType(ConsultationType.SPECIALIST)
        );

    }

    private static void initializeConsultations() {
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(1))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 82))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 2, 1, 44))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("ADHD")
                                .setDescription("Patient presents with symptoms related to adhd, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(2))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 10))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.FOLLOW_UP)
                        .setNotes("Patient reports Cough.")
                        .setConsultedAt(LocalDateTime.of(2024, 11, 28, 10, 10))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Childhood asthma")
                                .setDescription("Patient presents with symptoms related to childhood asthma, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Vertigo")
                                .setDescription("Patient presents with symptoms related to vertigo, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
        );
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(3))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 42))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.EMERGENCY)
                        .setNotes("Patient reports Shortness of breath.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 1, 18, 0))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Apply cold compress")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(4))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 85))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 1))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 12, 20, 10))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Epilepsy")
                                .setDescription("Patient presents with symptoms related to epilepsy, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Macular degeneration")
                                .setDescription("Patient presents with symptoms related to macular degeneration, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(5))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 62))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 4, 25, 22, 22))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(6))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 81))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.SPECIALIST)
                        .setNotes("Patient reports Fatigue.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 28, 1, 4))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Osteoarthritis")
                                .setDescription("Patient presents with symptoms related to osteoarthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Spinal cord injury")
                                .setDescription("Patient presents with symptoms related to spinal cord injury, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Glaucoma")
                                .setDescription("Patient presents with symptoms related to glaucoma, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(7))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 100))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2024, 12, 1, 2, 30))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Scoliosis")
                                .setDescription("Patient presents with symptoms related to scoliosis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(8))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 9))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 3))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Nausea.")
                        .setConsultedAt(LocalDateTime.of(2025, 7, 30, 20, 6))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hydrocephalus")
                                .setDescription("Patient presents with symptoms related to hydrocephalus, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Sinusitis")
                                .setDescription("Patient presents with symptoms related to sinusitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Surgery may be required")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fatigue")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Follow-up in two weeks")
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(9))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 25))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 2))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 18, 20, 14))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Rheumatoid arthritis")
                                .setDescription("Patient presents with symptoms related to rheumatoid arthritis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Nausea")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Tonsillitis")
                                .setDescription("Patient presents with symptoms related to tonsillitis, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(20)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                ))
        );
        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(10))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 15))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 4))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Pain.")
                        .setConsultedAt(LocalDateTime.of(2025, 5, 6, 10, 15))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Refractive errors")
                                .setDescription("Patient presents with symptoms related to refractive errors, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(10)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Diabetic retinopathy")
                                .setDescription("Patient presents with symptoms related to diabetic retinopathy, requiring careful examination and appropriate treatment.")
                                .setNotes("Physical therapy needed")
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Do not operate machinery after taking"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Brain tumor")
                                .setDescription("Patient presents with symptoms related to brain tumor, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Do not operate machinery after taking"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cerebral aneurysm")
                                .setDescription("Patient presents with symptoms related to cerebral aneurysm, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Do not operate machinery after taking"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Dizziness")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take once daily"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 1))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 4))
                                                .setQuantity(10)
                                                .setNotes("Take once daily"))
                                ))
        );

        Database.consultationsList.add(
                ((Consultation) new Consultation()
                        .setId(11))
                        .setPatient(Database.patientsList.findFirst(p -> p.getId() == 88))
                        .setDoctor(Database.doctorList.findFirst(d -> d.getId() == 5))
                        .setType(ConsultationType.GENERAL)
                        .setNotes("Patient reports Swelling.")
                        .setConsultedAt(LocalDateTime.of(2025, 8, 26, 0, 34))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Cataracts")
                                .setDescription("Patient presents with symptoms related to cataracts, requiring careful examination and appropriate treatment.")
                                .setNotes("Administer medication")
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Surgery may be required")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Physical therapy needed")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(10)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(15)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take with food"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Cough")
                                        .setNotes("Administer medication")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Follow-up in two weeks")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                ))
                        .addDiagnosis(new Diagnosis()
                                .setDiagnosis("Hearing loss")
                                .setDescription("Patient presents with symptoms related to hearing loss, requiring careful examination and appropriate treatment.")
                                .setNotes("Rest recommended")
                                .addTreatment(new Treatment()
                                        .setSymptom("Swelling")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 2))
                                                .setQuantity(10)
                                                .setNotes("Take with food"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Shortness of breath")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 8))
                                                .setQuantity(5)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take once daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(15)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(5)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Pain")
                                        .setNotes("Rest recommended")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(20)
                                                .setNotes("Take as needed for pain"))
                                )
                                .addTreatment(new Treatment()
                                        .setSymptom("Fever")
                                        .setNotes("Apply cold compress")
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 3))
                                                .setQuantity(25)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 5))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 7))
                                                .setQuantity(25)
                                                .setNotes("Take as needed for pain"))
                                        .addPrescription(new Prescription()
                                                .setProduct(Database.productList.findFirst(m -> m.getId() == 6))
                                                .setQuantity(15)
                                                .setNotes("Apply twice daily"))
                                ))
        );
    }
}